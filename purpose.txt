



Types of syntax for function calls:


OPERATION TYPE          PYTHON                                      NEW LANGUAGE
----------------------------------------------------------------------------------------------------
binary operators        item + 2                                    item | add 2
unary operators         not item                                    item | not
function calls          function(item)                              item | function
method calls            item.method()                               item | method
indexing                item[0]                                     item | atIndex 0
slicing                 item[1:]                                    item | slice 1
overwrite               item[0] = 42                                item | overwriteAt 0 42
delete                  del item[0]                                 item | deleteAt 0
list comprehensions     [x**2 for x in item if x > 10]              item | filter (isGreaterThan 10) | map square




EXAMPLE

PYTHON:
    print("\n".join(map(lambda text: "item: " + text, filter(lambda text: text.isAlpha(), listInput[0].split(" ")))) \
        + "\n" \
        + "\n".join(map(lambda text: "item: " + text, listInput[1:])))


NEW LANGUAGE:

    | to listInput
    | slice 1
    | map (prepend "item: ")
    | join "\n"
    > text2

    | to listInput
    | atIndex 0
    | split " "
    | filter isAlphabetic
    | map (prepend "item: ")
    | join "\n"
    | add "\n"
    | add text2
    | print

